/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
/**
 *
 * @author procesor777
 */
public class View extends JFrame {
    private Board panel_1 = null;
    private JCheckBoxMenuItem chckbxmntmPamitajRozmieszczenieZiaren;
    private JCheckBoxMenuItem chckbxmntmCzyPlanszePrzed;
    private boolean oneGrainBoundaryExtender = false;
    
    public View() {
        initComponents();
        
        
        System.out.println("Display::Display();");
        setForeground(UIManager.getColor("Button.highlight"));
        setBackground(Color.WHITE);
        setTitle("Modelowanie Wielkoskalowe - Grain growth");

        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 825, 725);
        
        JMenuItem mntmZamknij = new JMenuItem("Close");
        mntmZamknij.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                System.exit(0);
            }
        });
        //zmiany
        
        //koniec zmian

        chckbxmntmPamitajRozmieszczenieZiaren = new JCheckBoxMenuItem("Remember arrangement of grains");
        chckbxmntmPamitajRozmieszczenieZiaren.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                Base.InitConditions.menuSaveMap = !View.this.chckbxmntmPamitajRozmieszczenieZiaren.isSelected();
            }
        });

        chckbxmntmCzyPlanszePrzed = new JCheckBoxMenuItem("Clean board before start");
        chckbxmntmCzyPlanszePrzed.setSelected(true);
        chckbxmntmCzyPlanszePrzed.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                Base.InitConditions.menuClean = !View.this.chckbxmntmCzyPlanszePrzed.isSelected();
            }
        });
        mnPlik.add(chckbxmntmCzyPlanszePrzed);
        mnPlik.add(chckbxmntmPamitajRozmieszczenieZiaren);
        mnPlik.add(mntmZamknij);
        
        
         contentPane = new JPanel();
        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
        contentPane.setLayout(new BorderLayout(0, 0));
        setContentPane(contentPane);
        
        //JPanel panel = new JPanel(new GridLayout(1, 0));
        contentPane.add(panel, BorderLayout.NORTH);

       // JPanel panel_2 = new JPanel();
        contentPane.add(panel_2, BorderLayout.EAST);
         // =================================	generuj grafike 	================================

        panel_1 = new Board();
        panel_1.setBackground(SystemColor.WHITE);
       contentPane.add(panel_1, BorderLayout.CENTER);

        new Thread((Runnable) panel_1).start();

        // =================================	akcja generowania 	================================
        this.addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent e) {
                panel_1.refresh();
            }
        });
        
        grains.setModel(new SpinnerNumberModel(Base.InitConditions.punkty, 1, 360, 1));
        timeSpinner.setModel(new SpinnerNumberModel(20, 1, 9999, 1));
        inclNumSpinner.setModel(new SpinnerNumberModel(Base.InitConditions.numberOfInclusions, 1, 50, 1));
        rangeSpinner.setModel(new SpinnerNumberModel(Base.InitConditions.rangeOfInclusions, 1, 50, 1));
        circleBtn.setSelected(true);
        mooreBtn.setSelected(true);
        losowo.setSelected(true);
        isPeriod.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        contentPane = new javax.swing.JPanel();
        panel_2 = new javax.swing.JPanel();
        btnStart = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnAddSubs1 = new javax.swing.JButton();
        btnAddSubs2 = new javax.swing.JButton();
        btnExportBmp = new javax.swing.JButton();
        btnExportTxt = new javax.swing.JButton();
        btnImportTxt = new javax.swing.JButton();
        btnOneGrain = new javax.swing.JButton();
        btnAllGrains = new javax.swing.JButton();
        btnImportBMP = new javax.swing.JButton();
        btnTestIncl = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        panel = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        label4 = new java.awt.Label();
        mooreBtn = new javax.swing.JRadioButton();
        neumanBtn = new javax.swing.JRadioButton();
        label5 = new java.awt.Label();
        grains = new javax.swing.JSpinner();
        label6 = new java.awt.Label();
        timeSpinner = new javax.swing.JSpinner();
        label7 = new java.awt.Label();
        rownomiernie = new javax.swing.JRadioButton();
        losowo = new javax.swing.JRadioButton();
        losowo_wyb = new javax.swing.JRadioButton();
        losowo_promien = new javax.swing.JRadioButton();
        label8 = new java.awt.Label();
        label9 = new java.awt.Label();
        inclNumSpinner = new javax.swing.JSpinner();
        label10 = new java.awt.Label();
        rangeSpinner = new javax.swing.JSpinner();
        label11 = new java.awt.Label();
        squareBtn = new javax.swing.JRadioButton();
        circleBtn = new javax.swing.JRadioButton();
        addBeforeBtn = new javax.swing.JButton();
        addAfterBtn = new javax.swing.JButton();
        label12 = new java.awt.Label();
        isPeriod = new javax.swing.JRadioButton();
        isNotPeriod = new javax.swing.JRadioButton();
        subsTestBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnPlik = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnStart.setText("START");
        btnStart.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 0), 2, true));
        btnStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnStartMouseClicked(evt);
            }
        });
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnStop.setText("STOP");
        btnStop.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true));
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        btnClear.setText("CLEAR");
        btnClear.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 255), 2, true));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnAddSubs1.setText("Substructure 1");
        btnAddSubs1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSubs1ActionPerformed(evt);
            }
        });

        btnAddSubs2.setText("Substructure 2");
        btnAddSubs2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSubs2ActionPerformed(evt);
            }
        });

        btnExportBmp.setText("Export BMP");
        btnExportBmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportBmpActionPerformed(evt);
            }
        });

        btnExportTxt.setText("Export TXT");
        btnExportTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportTxtActionPerformed(evt);
            }
        });

        btnImportTxt.setText("Import TXT");
        btnImportTxt.setToolTipText("");
        btnImportTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportTxtActionPerformed(evt);
            }
        });

        btnOneGrain.setText("One grain boundary");
        btnOneGrain.setActionCommand("");
        btnOneGrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOneGrainActionPerformed(evt);
            }
        });

        btnAllGrains.setText("All grains boundaries");
        btnAllGrains.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllGrainsActionPerformed(evt);
            }
        });

        btnImportBMP.setText("Import BMP");
        btnImportBMP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportBMPActionPerformed(evt);
            }
        });

        btnTestIncl.setText("Test Substructure");
        btnTestIncl.setToolTipText("");
        btnTestIncl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestInclActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_2Layout = new javax.swing.GroupLayout(panel_2);
        panel_2.setLayout(panel_2Layout);
        panel_2Layout.setHorizontalGroup(
            panel_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnStop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExportBmp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExportTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnImportTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOneGrain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAllGrains, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(btnImportBMP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddSubs1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddSubs2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTestIncl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel_2Layout.setVerticalGroup(
            panel_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddSubs1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddSubs2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTestIncl, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(btnOneGrain, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAllGrains, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExportBmp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExportTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImportTxt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImportBMP))
        );

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setText("Board size");
        label1.setVisible(false);

        label4.setText("Neigbourhood");

        buttonGroup1.add(mooreBtn);
        mooreBtn.setText("Moore");
        mooreBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mooreBtnMousePressed(evt);
            }
        });
        mooreBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mooreBtnActionPerformed(evt);
            }
        });

        buttonGroup1.add(neumanBtn);
        neumanBtn.setText("von Neuman");
        neumanBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                neumanBtnMousePressed(evt);
            }
        });

        label5.setText("Number of grains");

        grains.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                grainsStateChanged(evt);
            }
        });

        label6.setText("Time [ms]");

        timeSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                timeSpinnerStateChanged(evt);
            }
        });

        label7.setText("Arrangement of nucleons");

        buttonGroup2.add(rownomiernie);
        rownomiernie.setText("Evenly");
        rownomiernie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rownomiernieMousePressed(evt);
            }
        });
        rownomiernie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rownomiernieActionPerformed(evt);
            }
        });

        buttonGroup2.add(losowo);
        losowo.setText("random (circle radius)");
        losowo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                losowoMousePressed(evt);
            }
        });

        buttonGroup2.add(losowo_wyb);
        losowo_wyb.setText("randomly choosen");
        losowo_wyb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                losowo_wybMousePressed(evt);
            }
        });

        buttonGroup2.add(losowo_promien);
        losowo_promien.setText("random with radius");
        losowo_promien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                losowo_promienMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                losowo_promienMouseReleased(evt);
            }
        });

        label8.setAlignment(java.awt.Label.CENTER);
        label8.setText("Inclusions");

        label9.setAlignment(java.awt.Label.CENTER);
        label9.setText("Number of:");

        inclNumSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                inclNumSpinnerStateChanged(evt);
            }
        });

        label10.setAlignment(java.awt.Label.CENTER);
        label10.setText("Range:");

        rangeSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rangeSpinnerStateChanged(evt);
            }
        });

        label11.setAlignment(java.awt.Label.CENTER);
        label11.setText("Shape:");

        buttonGroup3.add(squareBtn);
        squareBtn.setText("Square");
        squareBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareBtnActionPerformed(evt);
            }
        });

        buttonGroup3.add(circleBtn);
        circleBtn.setText("Circle");
        circleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                circleBtnActionPerformed(evt);
            }
        });

        addBeforeBtn.setText("Add Before");
        addBeforeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBeforeBtnActionPerformed(evt);
            }
        });

        addAfterBtn.setText("Add After");
        addAfterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAfterBtnActionPerformed(evt);
            }
        });

        label12.setAlignment(java.awt.Label.CENTER);
        label12.setText("Periodicity");

        buttonGroup4.add(isPeriod);
        isPeriod.setText("Yes");
        isPeriod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isPeriodActionPerformed(evt);
            }
        });

        buttonGroup4.add(isNotPeriod);
        isNotPeriod.setText("No");
        isNotPeriod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isNotPeriodActionPerformed(evt);
            }
        });

        subsTestBtn.setText("Test Inclusions");
        subsTestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subsTestBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(neumanBtn)
                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mooreBtn)
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(grains, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timeSpinner, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rownomiernie)
                            .addComponent(losowo)
                            .addComponent(losowo_wyb)
                            .addComponent(losowo_promien))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(label10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(label9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(inclNumSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                                    .addComponent(rangeSpinner)))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(squareBtn)
                                    .addComponent(circleBtn))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addBeforeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addAfterBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subsTestBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(isNotPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(isPeriod, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22))))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mooreBtn)
                            .addComponent(grains, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(timeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(panelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(neumanBtn)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rownomiernie)
                            .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(inclNumSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(addBeforeBtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(losowo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addComponent(losowo_wyb)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(losowo_promien)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(label11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addComponent(rangeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(squareBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(circleBtn))
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addComponent(addAfterBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(subsTestBtn)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(isPeriod)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isNotPeriod)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout contentPaneLayout = new javax.swing.GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentPaneLayout.createSequentialGroup()
                .addGap(657, 657, 657)
                .addComponent(panel_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPaneLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(11, 11, 11)
                .addComponent(panel_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        mnPlik.setText("File");
        jMenuBar1.add(mnPlik);

        jMenu2.setText("Edit");

        jMenu3.setText("jMenu3");

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("jCheckBoxMenuItem2");
        jMenu3.add(jCheckBoxMenuItem2);

        jCheckBoxMenuItem3.setSelected(true);
        jCheckBoxMenuItem3.setText("jCheckBoxMenuItem3");
        jMenu3.add(jCheckBoxMenuItem3);

        jMenu2.add(jMenu3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOneGrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOneGrainActionPerformed
        // TODO add your handling code here:
         if (!oneGrainBoundaryExtender)
                {
                    View.this.panel_1.addSubstructureVer1();
                    oneGrainBoundaryExtender = true;
                }

                View.this.panel_1.loadMap();
                View.this.panel_1.refresh();

                View.this.panel_1.showOnlyBoundaries();

                View.this.panel_1.loadMap();
                View.this.panel_1.refresh();
    }//GEN-LAST:event_btnOneGrainActionPerformed

    private void mooreBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mooreBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mooreBtnActionPerformed

    private void rownomiernieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rownomiernieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rownomiernieActionPerformed

    private void rownomiernieMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rownomiernieMousePressed
            // TODO add your handling code here:
            Base.InitConditions.rozmieszczenie = 1;
    }//GEN-LAST:event_rownomiernieMousePressed

    private void losowoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_losowoMousePressed
           Base.InitConditions.rozmieszczenie = 2;
        // TODO add your handling code here:
    }//GEN-LAST:event_losowoMousePressed

    private void losowo_wybMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_losowo_wybMousePressed
        // TODO add your handling code here:
         Base.InitConditions.rozmieszczenie = 3;
    }//GEN-LAST:event_losowo_wybMousePressed

    private void losowo_promienMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_losowo_promienMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_losowo_promienMouseReleased

    private void losowo_promienMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_losowo_promienMousePressed
        // TODO add your handling code here:
         Base.InitConditions.rozmieszczenie = 4;
    }//GEN-LAST:event_losowo_promienMousePressed

    private void mooreBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mooreBtnMousePressed
        // TODO add your handling code here:
        Base.InitConditions.sasiedztwo = 0;
    }//GEN-LAST:event_mooreBtnMousePressed

    private void neumanBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_neumanBtnMousePressed
        // TODO add your handling code here:
        Base.InitConditions.sasiedztwo = 1;
    }//GEN-LAST:event_neumanBtnMousePressed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnStartActionPerformed

    // ----------- Controls -------------- //
    
    private void btnStartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStartMouseClicked
        // TODO add your handling code here:
        if (Base.InitConditions.menuClean) View.this.panel_1.clean();
                if (Base.InitConditions.menuSaveMap) {
                    if (!Base.pkts.isEmpty()) {
                        View.this.panel_1.clean();
                        View.this.panel_1.loadMap();
                    } else {
                        View.this.panel_1.random();
                        View.this.panel_1.saveMap();
                    }
                } else {
                    View.this.panel_1.random();
                }
                View.this.panel_1.refresh();
                Base.InitConditions.StatusStart = 1;
    }//GEN-LAST:event_btnStartMouseClicked

    private void grainsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_grainsStateChanged
         Base.InitConditions.punkty = (Integer) grains.getValue();
// TODO add your handling code here:
    }//GEN-LAST:event_grainsStateChanged

    private void timeSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_timeSpinnerStateChanged
        // TODO add your handling code here:
        Base.InitConditions.delay = (Integer) timeSpinner.getValue();
    }//GEN-LAST:event_timeSpinnerStateChanged

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        
// TODO add your handling code here:
        Base.InitConditions.StatusStart = 0;
        oneGrainBoundaryExtender = false;
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        
        Base.InitConditions.StatusStart = 0; 
        View.this.panel_1.clean();
         View.this.panel_1.refresh();
         oneGrainBoundaryExtender = false;
        
    }//GEN-LAST:event_btnClearActionPerformed

    //---------- Import/Export ----------------//
    
    private void btnExportBmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportBmpActionPerformed
        // TODO add your handling code here:
        BufferedImage image = new BufferedImage(View.this.panel_1.getWidth(), View.this.panel_1.getHeight(), BufferedImage.TYPE_INT_RGB);
                Graphics2D g = image.createGraphics();
                View.this.panel_1.printAll(g);
                g.dispose();
                try {
                    System.out.println("try");

                    File file = new File(".bmp");
                    JFileChooser fileChooser = new JFileChooser();
                    if (fileChooser.showSaveDialog(View.this) == JFileChooser.APPROVE_OPTION) {
                        file = fileChooser.getSelectedFile();
                        ImageIO.write(image, "bmp", file);
                    }

                    //ImageIO.write(image, "bmp", new File("Paint.bmp"));
                    //ImageIO.write(image, "png", new File("Paint.png"));
                } catch (IOException exp) {
                    exp.printStackTrace();
                }
    }//GEN-LAST:event_btnExportBmpActionPerformed

    private void btnExportTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportTxtActionPerformed
        // TODO add your handling code here:
         View.this.panel_1.exportToFile();
    }//GEN-LAST:event_btnExportTxtActionPerformed

    private void btnImportTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportTxtActionPerformed
        // TODO add your handling code here:
         View.this.panel_1.importFromFile();
                View.this.panel_1.loadMap();
                View.this.panel_1.refresh();
                Base.InitConditions.StatusStart = 1;
    }//GEN-LAST:event_btnImportTxtActionPerformed

    private void addAfterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAfterBtnActionPerformed
        // TODO add your handling code here:
         View.this.panel_1.addInclusionsAfter();

                View.this.panel_1.loadMap();
                View.this.panel_1.refresh();
    }//GEN-LAST:event_addAfterBtnActionPerformed

    private void addBeforeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBeforeBtnActionPerformed
        // TODO add your handling code here:
        View.this.panel_1.random();
                View.this.panel_1.saveMap();

                View.this.panel_1.refresh();

                Base.InitConditions.StatusStart = 1;
                View.this.panel_1.saveMap();

                View.this.panel_1.refresh();

                View.this.panel_1.addInclusionsBefore();

                View.this.panel_1.refresh();
                Base.InitConditions.StatusStart = 0;

                //Display.this.panel_1.loadMap();
                View.this.panel_1.refresh();
    }//GEN-LAST:event_addBeforeBtnActionPerformed

    private void btnTestInclActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestInclActionPerformed
        // TODO add your handling code here:
        View.this.panel_1.random();
                View.this.panel_1.saveMap();

                View.this.panel_1.refresh();

                //!!zrobic
                View.this.panel_1.addRerunSubstructureVer1();
                Base.InitConditions.StatusStart = 1;
                View.this.panel_1.loadMap();
                View.this.panel_1.refresh(); 
        
        
    }//GEN-LAST:event_btnTestInclActionPerformed

    private void btnAddSubs1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSubs1ActionPerformed
        // TODO add your handling code here:
        View.this.panel_1.addSubstructureVer1();

                View.this.panel_1.loadMap();
                View.this.panel_1.refresh();
    }//GEN-LAST:event_btnAddSubs1ActionPerformed

    private void btnAddSubs2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSubs2ActionPerformed
        // TODO add your handling code here:
        View.this.panel_1.addSubstructureVer2();

                View.this.panel_1.loadMap();
                View.this.panel_1.refresh();
    }//GEN-LAST:event_btnAddSubs2ActionPerformed

    private void btnAllGrainsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllGrainsActionPerformed
        // TODO add your handling code here:
         View.this.panel_1.showOnlyBoundaries();

                View.this.panel_1.loadMap();
                View.this.panel_1.refresh();
    }//GEN-LAST:event_btnAllGrainsActionPerformed

    private void btnImportBMPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportBMPActionPerformed
        // TODO add your handling code here:
         JFileChooser fc = new JFileChooser();
                            if (fc.showOpenDialog(null)==JFileChooser.APPROVE_OPTION);
                            {
                               try
                            {
                            File toRead=fc.getSelectedFile();
                            BufferedImage myPicture = ImageIO.read(toRead);
                            JLabel picLabel = new JLabel(new ImageIcon(myPicture.getScaledInstance(panel_1.getWidth(), panel_1.getHeight(),Image.SCALE_FAST)));
                            picLabel.setBounds(panel_1.getX(), panel_1.getY(), panel_1.getWidth(), panel_1.getHeight());
                            panel_1.add(picLabel);
                           System.out.println("Picture loaded!");

                            }
                            catch(Exception f)
                            {
                                System.out.println("Not found");
                            }
                            View.this.panel_1.loadMap();
                            View.this.panel_1.refresh();
				
			}
    }//GEN-LAST:event_btnImportBMPActionPerformed

    private void inclNumSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_inclNumSpinnerStateChanged
        // TODO add your handling code here:
        
        Base.InitConditions.numberOfInclusions = (Integer) inclNumSpinner.getValue();
        
    }//GEN-LAST:event_inclNumSpinnerStateChanged

    private void rangeSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rangeSpinnerStateChanged
        // TODO add your handling code here:
        Base.InitConditions.rangeOfInclusions = (Integer) rangeSpinner.getValue();
    }//GEN-LAST:event_rangeSpinnerStateChanged

    private void squareBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squareBtnActionPerformed
        // TODO add your handling code here:
        Base.InitConditions.circleInclusions = false;
    }//GEN-LAST:event_squareBtnActionPerformed

    private void circleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_circleBtnActionPerformed
        // TODO add your handling code here:
        Base.InitConditions.circleInclusions = true;
    }//GEN-LAST:event_circleBtnActionPerformed

    private void isPeriodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isPeriodActionPerformed
        // TODO add your handling code here:
        Base.InitConditions.bc = 0;
    }//GEN-LAST:event_isPeriodActionPerformed

    private void isNotPeriodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isNotPeriodActionPerformed
        // TODO add your handling code here:
        Base.InitConditions.bc = 1;
    }//GEN-LAST:event_isNotPeriodActionPerformed

    private void subsTestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subsTestBtnActionPerformed
        // TODO add your handling code here:
        View.this.panel_1.refresh();
                //Display.this.panel_1.loadMap();
                View.this.panel_1.loadSavedMap();
                Base.InitConditions.StatusStart = 1;
                View.this.panel_1.refresh();
    }//GEN-LAST:event_subsTestBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAfterBtn;
    private javax.swing.JButton addBeforeBtn;
    private javax.swing.JButton btnAddSubs1;
    private javax.swing.JButton btnAddSubs2;
    private javax.swing.JButton btnAllGrains;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExportBmp;
    private javax.swing.JButton btnExportTxt;
    private javax.swing.JButton btnImportBMP;
    private javax.swing.JButton btnImportTxt;
    private javax.swing.JButton btnOneGrain;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JButton btnTestIncl;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JRadioButton circleBtn;
    private javax.swing.JPanel contentPane;
    private javax.swing.JSpinner grains;
    private javax.swing.JSpinner inclNumSpinner;
    private javax.swing.JRadioButton isNotPeriod;
    private javax.swing.JRadioButton isPeriod;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private java.awt.Label label1;
    private java.awt.Label label10;
    private java.awt.Label label11;
    private java.awt.Label label12;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.Label label9;
    private javax.swing.JRadioButton losowo;
    private javax.swing.JRadioButton losowo_promien;
    private javax.swing.JRadioButton losowo_wyb;
    private javax.swing.JMenu mnPlik;
    private javax.swing.JRadioButton mooreBtn;
    private javax.swing.JRadioButton neumanBtn;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel panel_2;
    private javax.swing.JSpinner rangeSpinner;
    private javax.swing.JRadioButton rownomiernie;
    private javax.swing.JRadioButton squareBtn;
    private javax.swing.JButton subsTestBtn;
    private javax.swing.JSpinner timeSpinner;
    // End of variables declaration//GEN-END:variables
}
